---
- name: "Looking for existing keys {{ keyname }}"
  command: "gpg --with-colons --list-secret-keys {{ keyname }}"
  register: gpg_output
  failed_when: false
  changed_when: false

- name: "Get fingerprint from gpg output"
  set_fact:
    fingerprint: "{{ gpg_output.stdout | regex_search('[A-Z0-9]{40}', multiline=True) }}"
  when: gpg_output.stderr is not search("No secret key")

- debug:
    msg: "Found existing keys {{ keyname }}: fingerprint"
  when: fingerprint is defined


- block:

  - name: "Generate keys for user: '{{ username }}'."
    command: "gpg2 --batch --status-fd 1 --with-colons --passphrase {{ passphrase | default('\"\"') }} --quick-gen-key {{ keyname }}" # used to be: --quick-generate-key
    register: gpg_output
     # gnupg does not support operations using su. Unable to ex/import keys this way.

  - name: "Get fingerprint from gpg output"
    set_fact:
      fingerprint: "{{ gpg_output.stdout | regex_search('[A-Z0-9]{40}', multiline=True) }}"

  # gpg2 --verbose --quick-set-expire {{ fingerprint }} 0

  when: fingerprint is not defined

- block:

    - name: Add fingerprint to user facts
      set_fact:
        users: "{{ users | combine( { username: { 'fingerprint': fingerprint } }, recursive=True ) }}"

      # Storing in khoe ensures ability to restore user from backup (todo: backup)
    - name:  write updated users config
      import_role:
        name: common
        tasks_from: write-config
      vars:
        file: "{{ config_file_users }}"
        content: "{{ users }}"
        do_backup: no

  when: fingerprint is defined
