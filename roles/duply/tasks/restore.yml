---
- name: "Ensure restore target directory is not present: {{ restore_target }}."
  file:
    path: "{{ restore_target }}"
    state: absent
  become: yes

# Using `sudo` like on the command line works, using `become` fails

- name: "Restore a full backup to {{ restore_target }} for user '{{ username }}' and profile '{{ profile_name }}'"
  command: "sudo AWS_ACCESS_KEY_ID={{ remote_backup_key }} AWS_SECRET_ACCESS_KEY={{ remote_backup_psw }} duply /home/{{ username }}/.duply/{{ profile_name }} restore {{ restore_target }} {{ age }}"
  register: duply
  failed_when: duply.stdout is search("Errno") or duply.rc > 0
  when: remote is defined and remote == "s3"

- name: "Restore a full backup to {{ restore_target }} for user '{{ username }}' and profile '{{ profile_name }}'"
  command: "sudo duply /home/{{ username }}/.duply/{{ profile_name }} restore {{ restore_target }} {{ age }}"
  register: duply
  failed_when: duply.stdout is search("Errno") or duply.rc > 0
  when: remote is undefined
