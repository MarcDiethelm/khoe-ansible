---
- set_fact: cronjob_state="absent" # absent | present


- include_tasks: sourcepath.yml

# share_name defaults to username (via group_vars)
- set_fact:
    profile_name: "{{ share_name }}"

- debug:
    msg: "Creating duply profile '{{ profile_name }}' for user '{{ username }}'. \nEncrypting with gpg key: {{ user.fingerprint }}"

- name: Create empty backup file list (if none exists)
  copy:
    content: "+ {{ source_path }}/{{ share_name }}"
    dest: "{{ config_dir_user }}/{{ backup_list_name }}"
    force: no # if it already exists, do nothing
    owner: "{{ username }}"
    group: khoe
    mode: 0640
  become: yes


- name: Read filelist
  command: "cat {{ config_dir_user }}/{{ backup_list_name }}"
  register: filelist

# Filelist format:
#- /home/example1/nas/bar.txt
#+ /home/example1/nas

- debug:
    var: target_path

- include_role:
    name: oefenweb.duply-backup
  vars:
    ansible_become: yes # oefenweb.duply is written to require root
    ansible_become_user: root
    duply_backup_profile_directory: "{{ profile_dir }}" # default set by oefenweb.duply: `/etc/duply/[profile_name]`
    duply_backup_profiles:
      '{{ profile_name }}':
        conf:
          gpg_key: "{{ user.fingerprint }}"
          gpg_pw: ''

          source: "{{ source_path }}"
          target: "{{ target_path }}"

          # remote auth. Duply removed this functionality. Need to set env vars in backup.yml
          #target_user: "{{ remote_backup_key }}"
          #target_pass: "{{ remote_backup_psw }}"

          dupl_params: null

          # max_age: 1W
          # max_fullbkp_age: 1M

          #verbosity: 5

          #arch_dir: '/data/backup/.duply-cache'
        # pre: ../../../files/duply-backup/pre
        # post: ../../../files/duply-backup/post
        excludes: "{{ filelist.stdout_lines + ['- '+ restore_target, '- **'] }}"

    duply_backup_jobs:
      - name: "duply-{{ username }}-{{ profile_name }}"
        state: "{{ cronjob_state }}"
        job: "/usr/local/bin/duply {{ profile_dir }}/{{ profile_name }} backup"
        # run every day at 04:00
        minute: "0"
        hour: "4"


  # Using `sudo` like on the command line works, using `become` fails
- name: "Run a duply status command (to copy the gpg keys to the profile now)"
  command: "sudo duply {{ profile_dir }}/{{ profile_name }} status"
  register: duply
