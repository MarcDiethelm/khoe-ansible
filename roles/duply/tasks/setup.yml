---
- include_tasks: sourcepath.yml

- name: Get hostname
  command: hostname
  register: hostname
  changed_when: false
  failed_when: false

- debug:
    msg: "Creating duply profile '{{ profile_name }}' for user '{{ username }}'. \nBackup location: {{ target }} \nEncrypting with gpg key: {{ user.fingerprint }}"

- name: "Create default backup file list (if none exists): {{ backup_list_name }}"
  copy:
    content: "+ {{ source_path }}/{{ share_name }}\n"
    dest: "{{ config_dir_user }}/{{ backup_list_name }}"
    force: no # if it already exists, do nothing
    owner: "{{ username }}"
    group: khoe
    mode: 0640
  become: yes

- name: Read filelist
  command: "cat {{ config_dir_user }}/{{ backup_list_name }}"
  register: filelist
  changed_when: false

- include_role:
    name: oefenweb.duply-backup
  vars:
    ansible_become: yes # oefenweb.duply is written to require root
    ansible_become_user: root
    duply_backup_profile_directory: "{{ profile_dir }}" # default set by oefenweb.duply: `/etc/duply/[profile_name]`
    duply_backup_profiles:
      '{{ profile_name }}':
        conf:
          gpg_key: "{{ user.fingerprint }}"
          gpg_pw: "{{ passphrase | default('') }}"

          source: "{{ source_path }}"
          target: "{{ target }}"
          # remote auth. Duply removed this functionality. Need to set env vars in backup.yml
          #target_user: "{{ remote_backup_key }}", #target_pass: "{{ remote_backup_psw }}"

          max_age: "{{ max_age }}" # Time frame for old backups to keep
          max_fullbkp_age: "{{ max_fullbkp_age }}" # Perform a full backup if latest full backup in the collection is older than the given time
          max_fulls_with_incrs: "{{ max_fulls_with_incrs }}" # Number of full backups for which incrementals will be kept for

          dupl_params: '--log-file {{ duplicity_log_path }}'
          #verbosity: 5
          #arch_dir: '/data/backup/.duply-cache'

        # pre: ../../../files/duply-backup/pre
        # post: ../../../files/duply-backup/post
        excludes: "{{ ['- '+ restore_target] + filelist.stdout_lines + ['- **'] }}"

        # Filelist format:
        #- /home/example1/nas/bar.txt
        #+ /home/example1/nas

    # duply_backup_jobs: not using this. Because no env vars support and hardcoded root which gets messy because we need to run backups as khoe with sudo

# - name: "Run a duply status command (to copy the gpg keys to the profile now)"
#   command: "sudo duply {{ profile_dir }}/{{ profile_name }} status"
#   register: duply
