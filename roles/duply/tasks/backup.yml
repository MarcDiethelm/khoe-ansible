---
- debug:
    msg: |
      Run a duply backup, user: '{{ username }}', profile: '{{ profile_name }}'
      Backup location: {{ remote.backup_location }}"
      Dry run: {{ dry_run }}

- set_fact:
    dry_run_option: '--dry-run'
  when: dry_run | bool

# Using `sudo` like on the command line works, using `become` fails to access gpg keys

- syslogger:
    msg: "Khoe: Starting backup, user: '{{ username }}', profile: '{{ profile_name }}"

- block:

    - block:
        - name: Backup to file system
          command: "sudo -E duply {{ profile_path|quote }} backup {{ dry_run_option }}"
          args:
            warn: no
          register: duply
        - debug:
            var: duply.stdout
      when: remote.backup_location is match('^file:///')

    - block:
        - name: Backup to S3 storage
          command: "sudo -E duply {{ profile_path|quote }} backup {{ dry_run_option }}"
          args:
            warn: no
          environment:
            AWS_ACCESS_KEY_ID: "{{ remote.api_key }}"
            AWS_SECRET_ACCESS_KEY: "{{ remote.api_key_secret }}"
          register: duply
        - debug:
            var: duply.stdout
      when: remote.backup_location is match('^s3://')

      # Add more `backup` setups here

    - syslogger:
        msg: "Khoe: Backup complete: user: '{{ username }}', profile: '{{ profile_name }}"

  rescue:
    - syslogger:
        msg: "Khoe: Backup failed: user: '{{ username }}', profile: '{{ profile_name }}"
