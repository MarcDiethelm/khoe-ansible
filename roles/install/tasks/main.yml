---
# KHOE_NAS_PATH is globally available after reboot only; (but install.sh sets it for its session.)
- name: 'Persist KHOE_NAS_PATH in /etc/environment. value: {{ khoe_nas_path }}'
  lineinfile:
    path: /etc/environment
    regexp: '^KHOE_NAS_PATH='
    line: 'KHOE_NAS_PATH={{ khoe_nas_path }}'
  become: yes

- name: 'Create group: {{ khoe_user }}'
  group:
    name: "{{ khoe_user }}"
  become: yes

- name: 'Create user: {{ khoe_user }}'
  user:
    name: "{{ khoe_user }}"
    group: "{{ khoe_user }}"
    groups: "adm,sudo,vboxsf" # plugdev is added by pmount install, docker by docker-smb install
    shell: /bin/bash
    update_password: on_create
  become: yes

- name: '/home/{{ khoe_user }}/.profile: cd to {{ khoe_nas_path }} on login'
  blockinfile:
    path: '/home/{{ khoe_user }}/.profile'
    block: |
      echo 'cd {{ khoe_nas_path}} '
      cd {{ khoe_nas_path }}
  become: yes
  become_user: '{{ khoe_user }}'

- name: 'Ensure config directory is present: {{ config_path }}.'
  file:
    path: '{{ config_path | mandatory }}'
    state: directory
    owner: root
    group: khoe
    mode: 0770
  become: yes

- name: Restrict permissions on ansible.cfg
  file:
    path: /home/khoe/ansible/ansible.cfg
    mode: 0700

- name: 'Set UID min to {{ uid_min }}'
  lineinfile:
    dest: /etc/login.defs
    regexp: '^UID_MIN'
    line: 'UID_MIN			 {{ uid_min }}'
  become: yes

- name: 'Set GID min to {{ gid_min }}'
  lineinfile:
    dest: /etc/login.defs
    regexp: '^GID_MIN'
    line: 'GID_MIN			 {{ gid_min }}'
  become: yes

- name: 'Ensure group "{{ khoe_users_group }}" exists'
  group:
    name: "{{ khoe_users_group }}"
    gid: "{{ khoe_users_gid }}"
  become: yes

# Prevent ureadahead from filling up syslog
# https://askubuntu.com/questions/749224/92-of-syslog-is-filled-with-message-regarding-ureadahead-ignoring-relative-pa
- name: Remove "ureadahead" package
  apt:
    name: ureadahead
    state: absent
    purge: yes
  become: yes

- name: 'Add (cron) job "start_nas" to khoe''s crontab'
  cron:
    name: 'khoe-boot'
    job: 'cd ansible && ansible-playbook playbooks/boot.yml 2>&1 | logger -t "khoe: boot"'
    user: khoe
    state: present
    special_time: reboot
  become: yes

# - import_role:
#     name: common
#     tasks_from: install-config
#   vars:
#     file: khoe.yml
