---
- hosts: khoe
  gather_facts: yes

  pre_tasks:
    - name: 'Get DEB architecture.'
      command: dpkg --print-architecture
      register: deb_arch
    - set_fact:
        arch: '{{ deb_arch.stdout is search("arm") | ternary("arm", "x86") }}'

    - name: Update apt cache.
      apt: update_cache=true cache_valid_time=600
      when: ansible_os_family == 'Debian'
      become: yes

    - name: Add Universe repository (any x86)
      apt_repository:
        repo: deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} universe
        state: present
        update_cache: yes
      become: yes
      when: ansible_distribution == 'Ubuntu' and arch == 'x86'

    - name: Add Universe repository (any ARM)
      apt_repository:
        repo: deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports {{ ansible_distribution_release }} universe
        state: present
        update_cache: yes
      become: yes
      when: ansible_distribution == 'Ubuntu' and arch == 'arm'

  tasks:

    # Perform hardware tweaks/workarounds
    - include_role:
        name: install
        tasks_from: hardware

    # Perform general khoe install actions
    - include_role:
        name: install

    # Perform roles' install tasks (install dependencies and add config files to config dirs)

    - include_role:
        name: pmount
        tasks_from: install
      vars:
        ansible_become: yes
        ansible_become_user: root

    - include_role:
        name: ecryptfs
        tasks_from: install
      vars:
        ansible_become: yes
        ansible_become_user: root

    - include_role:
        name: geerlingguy.pip
      vars:
        ansible_become: yes
        ansible_become_user: root
        pip_install_packages: docker # additional package to control containers with python

    - include_role:
        name: geerlingguy.docker
      vars:
        ansible_become: yes
        ansible_become_user: root
        docker_users: [ 'khoe' ] # requires re-log to apply
        docker_apt_arch: '{{ (ansible_architecture is search("armv")) | ternary("armhf", "amd64") }}'

    - include_role:
        name: docker-smb
        tasks_from: install

    - include_role:
        name: user
        tasks_from: install

    - include_role:
        name: gpg
        tasks_from: install
      vars:
        ansible_become: yes
        ansible_become_user: root

    - include_role:
        name: oefenweb.duply
      vars:
        ansible_become: yes
        ansible_become_user: root
        duply_install: [ 'duplicity' ]

    - include_role:
        name: duply
        tasks_from: install

    # Reboots the system if needed after upgrade
    - include_role:
        name: apt
        tasks_from: upgrade
      vars:
        ansible_become: yes
        ansible_become_user: root
